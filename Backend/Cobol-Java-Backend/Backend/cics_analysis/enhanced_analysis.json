{
  "analysis_results": {
    "rag_results": {
      "files": {
        "cobol_code.cbl": {
          "filename": "cobol_code.cbl",
          "file_type": "cobol_program",
          "size": 23797,
          "lines": 626,
          "program_id": "DBCONNECT",
          "divisions": [
            {
              "name": "IDENTIFICATION",
              "line": 9
            },
            {
              "name": "ENVIRONMENT",
              "line": 12
            },
            {
              "name": "DATA",
              "line": 17
            },
            {
              "name": "PROCEDURE",
              "line": 121
            }
          ],
          "data_items": [
            {
              "name": "WS-EMPLOYEE-RECORD",
              "line": 32,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-DB-CONNECTION",
              "line": 44,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-FLAGS",
              "line": 50,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-COUNTERS",
              "line": 56,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-ERROR-HANDLING",
              "line": 62,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-SEARCH-CRITERIA",
              "line": 67,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-USER-INPUT",
              "line": 71,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "WS-DISPLAY-VARIABLES",
              "line": 75,
              "pic": null,
              "java_type": "String"
            },
            {
              "name": "HV-EMP-ID",
              "line": 86,
              "pic": "9(",
              "java_type": "Integer"
            },
            {
              "name": "HV-EMP-FIRST-NAME",
              "line": 87,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-EMP-LAST-NAME",
              "line": 88,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-EMP-DEPT",
              "line": 89,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-EMP-POSITION",
              "line": 90,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-EMP-SALARY",
              "line": 91,
              "pic": "9(",
              "java_type": "Integer"
            },
            {
              "name": "HV-EMP-HIRE-DATE",
              "line": 92,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-DB-USER",
              "line": 93,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-DB-PASSWORD",
              "line": 94,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-SEARCH-DEPT",
              "line": 95,
              "pic": "X(",
              "java_type": "String"
            },
            {
              "name": "HV-MIN-SALARY",
              "line": 96,
              "pic": "9(",
              "java_type": "Integer"
            }
          ],
          "dependencies": {
            "copy_books": [],
            "called_programs": [],
            "file_references": [
              "EMP",
              "EMP",
              "FIRST",
              "FIRST"
            ],
            "vsam_files": [],
            "jcl_references": []
          },
          "business_logic": [
            {
              "line": 9,
              "statement": "IDENTIFICATION DIVISION.",
              "type": "OTHER"
            },
            {
              "line": 14,
              "statement": "SOURCE-COMPUTER. IBM-PC.",
              "type": "OTHER"
            },
            {
              "line": 15,
              "statement": "OBJECT-COMPUTER. IBM-PC.",
              "type": "OTHER"
            },
            {
              "line": 130,
              "statement": "PERFORM 1000-INITIALIZE.",
              "type": "PERFORM"
            },
            {
              "line": 132,
              "statement": "IF DB-CONNECTED",
              "type": "IF"
            },
            {
              "line": 133,
              "statement": "PERFORM 2000-PROCESS-USER-CHOICE",
              "type": "PERFORM"
            },
            {
              "line": 135,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 137,
              "statement": "PERFORM 9000-TERMINATE.",
              "type": "PERFORM"
            },
            {
              "line": 149,
              "statement": "MOVE \"N\" TO WS-END-OF-DATA.",
              "type": "MOVE"
            },
            {
              "line": 150,
              "statement": "MOVE \"N\" TO WS-DB-CONNECTED.",
              "type": "MOVE"
            },
            {
              "line": 152,
              "statement": "PERFORM 1100-CONNECT-TO-DB.",
              "type": "PERFORM"
            },
            {
              "line": 161,
              "statement": "MOVE WS-DB-USER TO HV-DB-USER.",
              "type": "MOVE"
            },
            {
              "line": 162,
              "statement": "MOVE WS-DB-PASSWORD TO HV-DB-PASSWORD.",
              "type": "MOVE"
            },
            {
              "line": 170,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS.",
              "type": "PERFORM"
            },
            {
              "line": 172,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 173,
              "statement": "MOVE \"Y\" TO WS-DB-CONNECTED",
              "type": "MOVE"
            },
            {
              "line": 179,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 185,
              "statement": "PERFORM 2100-DISPLAY-MENU.",
              "type": "PERFORM"
            },
            {
              "line": 190,
              "statement": "PERFORM 3000-RETRIEVE-ALL-EMPLOYEES",
              "type": "PERFORM"
            },
            {
              "line": 192,
              "statement": "PERFORM 3100-RETRIEVE-BY-CRITERIA",
              "type": "PERFORM"
            },
            {
              "line": 194,
              "statement": "PERFORM 4000-INSERT-EMPLOYEE",
              "type": "PERFORM"
            },
            {
              "line": 196,
              "statement": "PERFORM 5000-UPDATE-EMPLOYEE",
              "type": "PERFORM"
            },
            {
              "line": 198,
              "statement": "PERFORM 6000-DELETE-EMPLOYEE",
              "type": "PERFORM"
            },
            {
              "line": 200,
              "statement": "MOVE \"N\" TO WS-CONTINUE-CHOICE",
              "type": "MOVE"
            },
            {
              "line": 205,
              "statement": "IF WS-CONTINUE-CHOICE NOT = \"N\" AND WS-OPERATION-CHOICE NOT = 9",
              "type": "IF"
            },
            {
              "line": 207,
              "statement": "DISPLAY \"Do you want to perform another operation? (Y/N)\"",
              "type": "OTHER"
            },
            {
              "line": 209,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 236,
              "statement": "MOVE \"N\" TO WS-END-OF-DATA.",
              "type": "MOVE"
            },
            {
              "line": 242,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS.",
              "type": "PERFORM"
            },
            {
              "line": 244,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 248,
              "statement": "PERFORM 3050-FETCH-EMPLOYEE-RECORD",
              "type": "PERFORM"
            },
            {
              "line": 257,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 274,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 277,
              "statement": "MOVE HV-EMP-SALARY TO WS-FORMATTED-SALARY",
              "type": "MOVE"
            },
            {
              "line": 286,
              "statement": "IF SQLCODE = 100",
              "type": "IF"
            },
            {
              "line": 287,
              "statement": "MOVE \"Y\" TO WS-END-OF-DATA",
              "type": "MOVE"
            },
            {
              "line": 289,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 290,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 291,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 307,
              "statement": "MOVE WS-SEARCH-DEPT TO HV-SEARCH-DEPT.",
              "type": "MOVE"
            },
            {
              "line": 308,
              "statement": "MOVE WS-SEARCH-MIN-SALARY TO HV-MIN-SALARY.",
              "type": "MOVE"
            },
            {
              "line": 311,
              "statement": "MOVE \"N\" TO WS-END-OF-DATA.",
              "type": "MOVE"
            },
            {
              "line": 317,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS.",
              "type": "PERFORM"
            },
            {
              "line": 319,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 323,
              "statement": "PERFORM 3150-FETCH-DEPT-RECORD",
              "type": "PERFORM"
            },
            {
              "line": 332,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 349,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 352,
              "statement": "MOVE HV-EMP-SALARY TO WS-FORMATTED-SALARY",
              "type": "MOVE"
            },
            {
              "line": 361,
              "statement": "IF SQLCODE = 100",
              "type": "IF"
            },
            {
              "line": 362,
              "statement": "MOVE \"Y\" TO WS-END-OF-DATA",
              "type": "MOVE"
            },
            {
              "line": 364,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 365,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 366,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 397,
              "statement": "MOVE WS-EMP-ID TO HV-EMP-ID.",
              "type": "MOVE"
            },
            {
              "line": 398,
              "statement": "MOVE WS-EMP-FIRST-NAME TO HV-EMP-FIRST-NAME.",
              "type": "MOVE"
            },
            {
              "line": 399,
              "statement": "MOVE WS-EMP-LAST-NAME TO HV-EMP-LAST-NAME.",
              "type": "MOVE"
            },
            {
              "line": 400,
              "statement": "MOVE WS-EMP-DEPT TO HV-EMP-DEPT.",
              "type": "MOVE"
            },
            {
              "line": 401,
              "statement": "MOVE WS-EMP-POSITION TO HV-EMP-POSITION.",
              "type": "MOVE"
            },
            {
              "line": 402,
              "statement": "MOVE WS-EMP-SALARY TO HV-EMP-SALARY.",
              "type": "MOVE"
            },
            {
              "line": 403,
              "statement": "MOVE WS-EMP-HIRE-DATE TO HV-EMP-HIRE-DATE.",
              "type": "MOVE"
            },
            {
              "line": 415,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS.",
              "type": "PERFORM"
            },
            {
              "line": 417,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 429,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 442,
              "statement": "MOVE WS-EMP-ID TO HV-EMP-ID.",
              "type": "MOVE"
            },
            {
              "line": 454,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS.",
              "type": "PERFORM"
            },
            {
              "line": 456,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 457,
              "statement": "MOVE HV-EMP-FIRST-NAME TO WS-EMP-FIRST-NAME",
              "type": "MOVE"
            },
            {
              "line": 458,
              "statement": "MOVE HV-EMP-LAST-NAME TO WS-EMP-LAST-NAME",
              "type": "MOVE"
            },
            {
              "line": 459,
              "statement": "MOVE HV-EMP-DEPT TO WS-EMP-DEPT",
              "type": "MOVE"
            },
            {
              "line": 460,
              "statement": "MOVE HV-EMP-POSITION TO WS-EMP-POSITION",
              "type": "MOVE"
            },
            {
              "line": 461,
              "statement": "MOVE HV-EMP-SALARY TO WS-EMP-SALARY",
              "type": "MOVE"
            },
            {
              "line": 462,
              "statement": "MOVE HV-EMP-HIRE-DATE TO WS-EMP-HIRE-DATE",
              "type": "MOVE"
            },
            {
              "line": 477,
              "statement": "IF WS-EMP-DEPT = SPACES",
              "type": "IF"
            },
            {
              "line": 478,
              "statement": "MOVE HV-EMP-DEPT TO WS-EMP-DEPT",
              "type": "MOVE"
            },
            {
              "line": 479,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 483,
              "statement": "IF WS-EMP-POSITION = SPACES",
              "type": "IF"
            },
            {
              "line": 484,
              "statement": "MOVE HV-EMP-POSITION TO WS-EMP-POSITION",
              "type": "MOVE"
            },
            {
              "line": 485,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 489,
              "statement": "IF WS-EMP-SALARY = ZEROES",
              "type": "IF"
            },
            {
              "line": 490,
              "statement": "MOVE HV-EMP-SALARY TO WS-EMP-SALARY",
              "type": "MOVE"
            },
            {
              "line": 491,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 493,
              "statement": "MOVE WS-EMP-DEPT TO HV-EMP-DEPT",
              "type": "MOVE"
            },
            {
              "line": 494,
              "statement": "MOVE WS-EMP-POSITION TO HV-EMP-POSITION",
              "type": "MOVE"
            },
            {
              "line": 495,
              "statement": "MOVE WS-EMP-SALARY TO HV-EMP-SALARY",
              "type": "MOVE"
            },
            {
              "line": 505,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 507,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 519,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 521,
              "statement": "IF SQLCODE = 100",
              "type": "IF"
            },
            {
              "line": 524,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 525,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 526,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 539,
              "statement": "MOVE WS-EMP-ID TO HV-EMP-ID.",
              "type": "MOVE"
            },
            {
              "line": 548,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS.",
              "type": "PERFORM"
            },
            {
              "line": 550,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 558,
              "statement": "IF WS-CONTINUE-CHOICE = \"Y\" OR WS-CONTINUE-CHOICE = \"y\"",
              "type": "IF"
            },
            {
              "line": 564,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 566,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 578,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 581,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 583,
              "statement": "IF SQLCODE = 100",
              "type": "IF"
            },
            {
              "line": 586,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 587,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 588,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 594,
              "statement": "MOVE SQLCODE TO WS-SQL-STATUS.",
              "type": "MOVE"
            },
            {
              "line": 595,
              "statement": "MOVE SQLERRMC TO WS-SQL-MSG.",
              "type": "MOVE"
            },
            {
              "line": 597,
              "statement": "IF SQLCODE < 0",
              "type": "IF"
            },
            {
              "line": 604,
              "statement": "END-IF.",
              "type": "OTHER"
            },
            {
              "line": 610,
              "statement": "IF DB-CONNECTED",
              "type": "IF"
            },
            {
              "line": 615,
              "statement": "PERFORM 8000-CHECK-SQL-STATUS",
              "type": "PERFORM"
            },
            {
              "line": 617,
              "statement": "IF SQLCODE = 0",
              "type": "IF"
            },
            {
              "line": 621,
              "statement": "END-IF",
              "type": "OTHER"
            },
            {
              "line": 622,
              "statement": "END-IF.",
              "type": "OTHER"
            }
          ],
          "sql_statements": [
            {
              "line": 25,
              "statement": "EXEC SQL"
            },
            {
              "line": 84,
              "statement": "EXEC SQL BEGIN DECLARE SECTION END-EXEC."
            },
            {
              "line": 98,
              "statement": "EXEC SQL END DECLARE SECTION END-EXEC."
            },
            {
              "line": 103,
              "statement": "EXEC SQL"
            },
            {
              "line": 111,
              "statement": "EXEC SQL"
            },
            {
              "line": 164,
              "statement": "EXEC SQL"
            },
            {
              "line": 238,
              "statement": "EXEC SQL"
            },
            {
              "line": 254,
              "statement": "EXEC SQL"
            },
            {
              "line": 263,
              "statement": "EXEC SQL"
            },
            {
              "line": 313,
              "statement": "EXEC SQL"
            },
            {
              "line": 329,
              "statement": "EXEC SQL"
            },
            {
              "line": 338,
              "statement": "EXEC SQL"
            },
            {
              "line": 405,
              "statement": "EXEC SQL"
            },
            {
              "line": 422,
              "statement": "EXEC SQL"
            },
            {
              "line": 426,
              "statement": "EXEC SQL"
            },
            {
              "line": 444,
              "statement": "EXEC SQL"
            },
            {
              "line": 497,
              "statement": "EXEC SQL"
            },
            {
              "line": 512,
              "statement": "EXEC SQL"
            },
            {
              "line": 516,
              "statement": "EXEC SQL"
            },
            {
              "line": 541,
              "statement": "EXEC SQL"
            },
            {
              "line": 559,
              "statement": "EXEC SQL"
            },
            {
              "line": 571,
              "statement": "EXEC SQL"
            },
            {
              "line": 575,
              "statement": "EXEC SQL"
            },
            {
              "line": 611,
              "statement": "EXEC SQL"
            }
          ]
        }
      },
      "connections": {
        "cobol_code.cbl": {
          "depends_on": [],
          "used_by": [],
          "connection_type": []
        }
      },
      "dependencies": {},
      "field_mappings": {
        "WS-EMPLOYEE-RECORD": {
          "cobol_name": "WS-EMPLOYEE-RECORD",
          "java_name": "wsEmployeeRecord",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-DB-CONNECTION": {
          "cobol_name": "WS-DB-CONNECTION",
          "java_name": "wsDbConnection",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-FLAGS": {
          "cobol_name": "WS-FLAGS",
          "java_name": "wsFlags",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-COUNTERS": {
          "cobol_name": "WS-COUNTERS",
          "java_name": "wsCounters",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-ERROR-HANDLING": {
          "cobol_name": "WS-ERROR-HANDLING",
          "java_name": "wsErrorHandling",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-SEARCH-CRITERIA": {
          "cobol_name": "WS-SEARCH-CRITERIA",
          "java_name": "wsSearchCriteria",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-USER-INPUT": {
          "cobol_name": "WS-USER-INPUT",
          "java_name": "wsUserInput",
          "java_type": "String",
          "pic_clause": null
        },
        "WS-DISPLAY-VARIABLES": {
          "cobol_name": "WS-DISPLAY-VARIABLES",
          "java_name": "wsDisplayVariables",
          "java_type": "String",
          "pic_clause": null
        },
        "HV-EMP-ID": {
          "cobol_name": "HV-EMP-ID",
          "java_name": "hvEmpId",
          "java_type": "Integer",
          "pic_clause": "9("
        },
        "HV-EMP-FIRST-NAME": {
          "cobol_name": "HV-EMP-FIRST-NAME",
          "java_name": "hvEmpFirstName",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-EMP-LAST-NAME": {
          "cobol_name": "HV-EMP-LAST-NAME",
          "java_name": "hvEmpLastName",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-EMP-DEPT": {
          "cobol_name": "HV-EMP-DEPT",
          "java_name": "hvEmpDept",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-EMP-POSITION": {
          "cobol_name": "HV-EMP-POSITION",
          "java_name": "hvEmpPosition",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-EMP-SALARY": {
          "cobol_name": "HV-EMP-SALARY",
          "java_name": "hvEmpSalary",
          "java_type": "Integer",
          "pic_clause": "9("
        },
        "HV-EMP-HIRE-DATE": {
          "cobol_name": "HV-EMP-HIRE-DATE",
          "java_name": "hvEmpHireDate",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-DB-USER": {
          "cobol_name": "HV-DB-USER",
          "java_name": "hvDbUser",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-DB-PASSWORD": {
          "cobol_name": "HV-DB-PASSWORD",
          "java_name": "hvDbPassword",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-SEARCH-DEPT": {
          "cobol_name": "HV-SEARCH-DEPT",
          "java_name": "hvSearchDept",
          "java_type": "String",
          "pic_clause": "X("
        },
        "HV-MIN-SALARY": {
          "cobol_name": "HV-MIN-SALARY",
          "java_name": "hvMinSalary",
          "java_type": "Integer",
          "pic_clause": "9("
        }
      },
      "business_entities": [
        {
          "name": "WS-EMPLOYEE-RECORD",
          "source_file": "cobol_code.cbl",
          "line": 32,
          "java_class_name": "WsEmployeeRecord",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-DB-CONNECTION",
          "source_file": "cobol_code.cbl",
          "line": 44,
          "java_class_name": "WsDbConnection",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-FLAGS",
          "source_file": "cobol_code.cbl",
          "line": 50,
          "java_class_name": "WsFlags",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-COUNTERS",
          "source_file": "cobol_code.cbl",
          "line": 56,
          "java_class_name": "WsCounters",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-ERROR-HANDLING",
          "source_file": "cobol_code.cbl",
          "line": 62,
          "java_class_name": "WsErrorHandling",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-SEARCH-CRITERIA",
          "source_file": "cobol_code.cbl",
          "line": 67,
          "java_class_name": "WsSearchCriteria",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-USER-INPUT",
          "source_file": "cobol_code.cbl",
          "line": 71,
          "java_class_name": "WsUserInput",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "WS-DISPLAY-VARIABLES",
          "source_file": "cobol_code.cbl",
          "line": 75,
          "java_class_name": "WsDisplayVariables",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-ID",
          "source_file": "cobol_code.cbl",
          "line": 86,
          "java_class_name": "HvEmpId",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-FIRST-NAME",
          "source_file": "cobol_code.cbl",
          "line": 87,
          "java_class_name": "HvEmpFirstName",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-LAST-NAME",
          "source_file": "cobol_code.cbl",
          "line": 88,
          "java_class_name": "HvEmpLastName",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-DEPT",
          "source_file": "cobol_code.cbl",
          "line": 89,
          "java_class_name": "HvEmpDept",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-POSITION",
          "source_file": "cobol_code.cbl",
          "line": 90,
          "java_class_name": "HvEmpPosition",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-SALARY",
          "source_file": "cobol_code.cbl",
          "line": 91,
          "java_class_name": "HvEmpSalary",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-EMP-HIRE-DATE",
          "source_file": "cobol_code.cbl",
          "line": 92,
          "java_class_name": "HvEmpHireDate",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-DB-USER",
          "source_file": "cobol_code.cbl",
          "line": 93,
          "java_class_name": "HvDbUser",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-DB-PASSWORD",
          "source_file": "cobol_code.cbl",
          "line": 94,
          "java_class_name": "HvDbPassword",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-SEARCH-DEPT",
          "source_file": "cobol_code.cbl",
          "line": 95,
          "java_class_name": "HvSearchDept",
          "fields": [],
          "estimated_complexity": "medium"
        },
        {
          "name": "HV-MIN-SALARY",
          "source_file": "cobol_code.cbl",
          "line": 96,
          "java_class_name": "HvMinSalary",
          "fields": [],
          "estimated_complexity": "medium"
        }
      ],
      "conversion_patterns": [
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-EMPLOYEE-RECORD",
          "java_equivalent": "public class WsEmployeeRecord",
          "context": "Convert COBOL record WS-EMPLOYEE-RECORD to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-DB-CONNECTION",
          "java_equivalent": "public class WsDbConnection",
          "context": "Convert COBOL record WS-DB-CONNECTION to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-FLAGS",
          "java_equivalent": "public class WsFlags",
          "context": "Convert COBOL record WS-FLAGS to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-COUNTERS",
          "java_equivalent": "public class WsCounters",
          "context": "Convert COBOL record WS-COUNTERS to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-ERROR-HANDLING",
          "java_equivalent": "public class WsErrorHandling",
          "context": "Convert COBOL record WS-ERROR-HANDLING to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-SEARCH-CRITERIA",
          "java_equivalent": "public class WsSearchCriteria",
          "context": "Convert COBOL record WS-SEARCH-CRITERIA to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-USER-INPUT",
          "java_equivalent": "public class WsUserInput",
          "context": "Convert COBOL record WS-USER-INPUT to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-DISPLAY-VARIABLES",
          "java_equivalent": "public class WsDisplayVariables",
          "context": "Convert COBOL record WS-DISPLAY-VARIABLES to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-ID",
          "java_equivalent": "public class HvEmpId",
          "context": "Convert COBOL record HV-EMP-ID to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-FIRST-NAME",
          "java_equivalent": "public class HvEmpFirstName",
          "context": "Convert COBOL record HV-EMP-FIRST-NAME to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-LAST-NAME",
          "java_equivalent": "public class HvEmpLastName",
          "context": "Convert COBOL record HV-EMP-LAST-NAME to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-DEPT",
          "java_equivalent": "public class HvEmpDept",
          "context": "Convert COBOL record HV-EMP-DEPT to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-POSITION",
          "java_equivalent": "public class HvEmpPosition",
          "context": "Convert COBOL record HV-EMP-POSITION to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-SALARY",
          "java_equivalent": "public class HvEmpSalary",
          "context": "Convert COBOL record HV-EMP-SALARY to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-HIRE-DATE",
          "java_equivalent": "public class HvEmpHireDate",
          "context": "Convert COBOL record HV-EMP-HIRE-DATE to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-DB-USER",
          "java_equivalent": "public class HvDbUser",
          "context": "Convert COBOL record HV-DB-USER to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-DB-PASSWORD",
          "java_equivalent": "public class HvDbPassword",
          "context": "Convert COBOL record HV-DB-PASSWORD to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-SEARCH-DEPT",
          "java_equivalent": "public class HvSearchDept",
          "context": "Convert COBOL record HV-SEARCH-DEPT to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-MIN-SALARY",
          "java_equivalent": "public class HvMinSalary",
          "context": "Convert COBOL record HV-MIN-SALARY to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD EMP",
          "java_equivalent": "// Repository pattern for EMP",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD EMP",
          "java_equivalent": "// Repository pattern for EMP",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD FIRST",
          "java_equivalent": "// Repository pattern for FIRST",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD FIRST",
          "java_equivalent": "// Repository pattern for FIRST",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 1000-INITIALIZE.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF DB-CONNECTED",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 2000-PROCESS-USER-CHOICE",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 9000-TERMINATE.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 1100-CONNECT-TO-DB.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 2100-DISPLAY-MENU.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3000-RETRIEVE-ALL-EMPLOYEES",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3100-RETRIEVE-BY-CRITERIA",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 4000-INSERT-EMPLOYEE",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 5000-UPDATE-EMPLOYEE",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 6000-DELETE-EMPLOYEE",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-CONTINUE-CHOICE NOT = \"N\" AND WS-OPERATION-CHOICE NOT = 9",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3050-FETCH-EMPLOYEE-RECORD",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3150-FETCH-DEPT-RECORD",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-EMP-DEPT = SPACES",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-EMP-POSITION = SPACES",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-EMP-SALARY = ZEROES",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-CONTINUE-CHOICE = \"Y\" OR WS-CONTINUE-CHOICE = \"y\"",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE < 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF DB-CONNECTED",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "java_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "java_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        }
      ]
    },
    "cics_results": {
      "programs": {
        "cobol_code.cbl": {
          "description": "COBOL CICS program",
          "program_id": "DBCONNECT",
          "copybooks": [],
          "control_includes": [],
          "file_descriptors": [],
          "cics_commands": [],
          "sql_blocks": [
            {
              "original_sql": "EXEC SQL\n\nINCLUDE SQLCA\n\nEND-EXEC.",
              "line_number": 53,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nINCLUDE SQLCA\n\nEND-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL BEGIN DECLARE SECTION END-EXEC.\n\n\n\n01 HV-EMP-ID                   PIC 9(5).\n\n01 HV-EMP-FIRST-NAME           PIC X(20).\n\n01 HV-EMP-LAST-NAME            PIC X(20).\n\n01 HV-EMP-DEPT                 PIC X(15).\n\n01 HV-EMP-POSITION             PIC X(20).\n\n01 HV-EMP-SALARY               PIC 9(7)V99.\n\n01 HV-EMP-HIRE-DATE            PIC X(10).\n\n01 HV-DB-USER                  PIC X(20).\n\n01 HV-DB-PASSWORD              PIC X(20).\n\n01 HV-SEARCH-DEPT              PIC X(15).\n\n01 HV-MIN-SALARY               PIC 9(7)V99.\n\n\n\nEXEC SQL END DECLARE SECTION END-EXEC.",
              "line_number": 195,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL BEGIN DECLARE SECTION END-EXEC.\n\n\n\n01 HV-EMP-ID                   PIC 9(5).\n\n01 HV-EMP-FIRST-NAME           PIC X(20).\n\n01 HV-EMP-LAST-NAME            PIC X(20).\n\n01 HV-EMP-DEPT                 PIC X(15).\n\n01 HV-EMP-POSITION             PIC X(20).\n\n01 HV-EMP-SALARY               PIC 9(7)V99.\n\n01 HV-EMP-HIRE-DATE            PIC X(10).\n\n01 HV-DB-USER                  PIC X(20).\n\n01 HV-DB-PASSWORD              PIC X(20).\n\n01 HV-SEARCH-DEPT              PIC X(15).\n\n01 HV-MIN-SALARY               PIC 9(7)V99.\n\n\n\nEXEC SQL END DECLARE SECTION END-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL END DECLARE SECTION END-EXEC.\n\n\n\n*-----------------------------------------------------------------\n\n* Cursor Declarations\n\n*-----------------------------------------------------------------\n\nEXEC SQL\n\nDECLARE EMP_CURSOR CURSOR FOR\n\nSELECT EMP_ID, FIRST_NAME, LAST_NAME, DEPARTMENT,\n\nPOSITION, SALARY, HIRE_DATE\n\nFROM EMPLOYEES\n\nORDER BY EMP_ID\n\nEND-EXEC.",
              "line_number": 217,
              "sql_type": "CURSOR",
              "dotnet_equivalent": "var results = await _context.EntitySet.ToListAsync();",
              "entity_framework_hint": "LINQ Query with projection",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nDECLARE DEPT_CURSOR CURSOR FOR\n\nSELECT EMP_ID, FIRST_NAME, LAST_NAME, DEPARTMENT,\n\nPOSITION, SALARY, HIRE_DATE\n\nFROM EMPLOYEES\n\nWHERE DEPARTMENT = :HV-SEARCH-DEPT\n\nAND SALARY >= :HV-MIN-SALARY\n\nORDER BY SALARY DESC\n\nEND-EXEC.",
              "line_number": 237,
              "sql_type": "CURSOR",
              "dotnet_equivalent": "var results = await _context.EntitySet.ToListAsync();",
              "entity_framework_hint": "LINQ Query with projection",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nCONNECT TO :WS-DB-NAME\n\nUSER :HV-DB-USER\n\nUSING :HV-DB-PASSWORD\n\nEND-EXEC.",
              "line_number": 335,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nCONNECT TO :WS-DB-NAME\n\nUSER :HV-DB-USER\n\nUSING :HV-DB-PASSWORD\n\nEND-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nOPEN EMP_CURSOR\n\nEND-EXEC.",
              "line_number": 479,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nOPEN EMP_CURSOR\n\nEND-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nCLOSE EMP_CURSOR\n\nEND-EXEC",
              "line_number": 511,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nCLOSE EMP_CURSOR\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nFETCH EMP_CURSOR INTO\n\n:HV-EMP-ID,\n\n:HV-EMP-FIRST-NAME,\n\n:HV-EMP-LAST-NAME,\n\n:HV-EMP-DEPT,\n\n:HV-EMP-POSITION,\n\n:HV-EMP-SALARY,\n\n:HV-EMP-HIRE-DATE\n\nEND-EXEC.",
              "line_number": 543,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nFETCH EMP_CURSOR INTO\n\n:HV-EMP-ID,\n\n:HV-EMP-FIRST-NAME,\n\n:HV-EMP-LAST-NAME,\n\n:HV-EMP-DEPT,\n\n:HV-EMP-POSITION,\n\n:HV-EMP-SALARY,\n\n:HV-EMP-HIRE-DATE\n\nEND-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nOPEN DEPT_CURSOR\n\nEND-EXEC.",
              "line_number": 629,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nOPEN DEPT_CURSOR\n\nEND-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nCLOSE DEPT_CURSOR\n\nEND-EXEC",
              "line_number": 661,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nCLOSE DEPT_CURSOR\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nFETCH DEPT_CURSOR INTO\n\n:HV-EMP-ID,\n\n:HV-EMP-FIRST-NAME,\n\n:HV-EMP-LAST-NAME,\n\n:HV-EMP-DEPT,\n\n:HV-EMP-POSITION,\n\n:HV-EMP-SALARY,\n\n:HV-EMP-HIRE-DATE\n\nEND-EXEC.",
              "line_number": 693,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nFETCH DEPT_CURSOR INTO\n\n:HV-EMP-ID,\n\n:HV-EMP-FIRST-NAME,\n\n:HV-EMP-LAST-NAME,\n\n:HV-EMP-DEPT,\n\n:HV-EMP-POSITION,\n\n:HV-EMP-SALARY,\n\n:HV-EMP-HIRE-DATE\n\nEND-EXEC.",
              "entity_framework_hint": "Repository pattern",
              "complexity": "HIGH"
            },
            {
              "original_sql": "EXEC SQL\n\nINSERT INTO EMPLOYEES\n\n(EMP_ID, FIRST_NAME, LAST_NAME, DEPARTMENT,\n\nPOSITION, SALARY, HIRE_DATE)\n\nVALUES\n\n(:HV-EMP-ID, :HV-EMP-FIRST-NAME, :HV-EMP-LAST-NAME,\n\n:HV-EMP-DEPT, :HV-EMP-POSITION, :HV-EMP-SALARY,\n\n:HV-EMP-HIRE-DATE)\n\nEND-EXEC.",
              "line_number": 825,
              "sql_type": "INSERT",
              "dotnet_equivalent": "await _context.EntitySet.AddAsync(entity); await _context.SaveChangesAsync();",
              "entity_framework_hint": "Add + SaveChanges pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nCOMMIT WORK\n\nEND-EXEC",
              "line_number": 847,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nCOMMIT WORK\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nROLLBACK WORK\n\nEND-EXEC",
              "line_number": 855,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nROLLBACK WORK\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nSELECT FIRST_NAME, LAST_NAME, DEPARTMENT,\n\nPOSITION, SALARY, HIRE_DATE\n\nINTO :HV-EMP-FIRST-NAME, :HV-EMP-LAST-NAME,\n\n:HV-EMP-DEPT, :HV-EMP-POSITION,\n\n:HV-EMP-SALARY, :HV-EMP-HIRE-DATE\n\nFROM EMPLOYEES\n\nWHERE EMP_ID = :HV-EMP-ID\n\nEND-EXEC.",
              "line_number": 903,
              "sql_type": "SELECT",
              "dotnet_equivalent": "var results = await _context.EntitySet.ToListAsync();",
              "entity_framework_hint": "LINQ Query with projection",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nUPDATE EMPLOYEES\n\nSET DEPARTMENT = :HV-EMP-DEPT,\n\nPOSITION = :HV-EMP-POSITION,\n\nSALARY = :HV-EMP-SALARY\n\nWHERE EMP_ID = :HV-EMP-ID\n\nEND-EXEC",
              "line_number": 1005,
              "sql_type": "UPDATE",
              "dotnet_equivalent": "_context.EntitySet.Update(entity); await _context.SaveChangesAsync();",
              "entity_framework_hint": "Update + SaveChanges pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nCOMMIT WORK\n\nEND-EXEC",
              "line_number": 1027,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nCOMMIT WORK\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nROLLBACK WORK\n\nEND-EXEC",
              "line_number": 1035,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nROLLBACK WORK\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nSELECT FIRST_NAME, LAST_NAME\n\nINTO :HV-EMP-FIRST-NAME, :HV-EMP-LAST-NAME\n\nFROM EMPLOYEES\n\nWHERE EMP_ID = :HV-EMP-ID\n\nEND-EXEC.",
              "line_number": 1091,
              "sql_type": "SELECT",
              "dotnet_equivalent": "var results = await _context.EntitySet.ToListAsync();",
              "entity_framework_hint": "LINQ Query with projection",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nDELETE FROM EMPLOYEES\n\nWHERE EMP_ID = :HV-EMP-ID\n\nEND-EXEC",
              "line_number": 1123,
              "sql_type": "DELETE",
              "dotnet_equivalent": "_context.EntitySet.Remove(entity); await _context.SaveChangesAsync();",
              "entity_framework_hint": "Remove + SaveChanges pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nCOMMIT WORK\n\nEND-EXEC",
              "line_number": 1145,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nCOMMIT WORK\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nROLLBACK WORK\n\nEND-EXEC",
              "line_number": 1153,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nROLLBACK WORK\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            },
            {
              "original_sql": "EXEC SQL\n\nDISCONNECT CURRENT\n\nEND-EXEC",
              "line_number": 1225,
              "sql_type": "SELECT",
              "dotnet_equivalent": "// TODO: Convert SQL: EXEC SQL\n\nDISCONNECT CURRENT\n\nEND-EXEC",
              "entity_framework_hint": "Repository pattern",
              "complexity": "MEDIUM"
            }
          ],
          "business_logic": [],
          "procedures": [
            {
              "name": "1000-INITIALIZE",
              "line": 259,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 1000InitializeAsync()"
            },
            {
              "name": "2000-PROCESS-USER-CHOICE",
              "line": 265,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 2000ProcessUserChoiceAsync()"
            },
            {
              "name": "9000-TERMINATE",
              "line": 273,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 9000TerminateAsync()"
            },
            {
              "name": "1100-CONNECT-TO-DB",
              "line": 303,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 1100ConnectToDbAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 339,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "2100-DISPLAY-MENU",
              "line": 369,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 2100DisplayMenuAsync()"
            },
            {
              "name": "3000-RETRIEVE-ALL-EMPLOYEES",
              "line": 379,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 3000RetrieveAllEmployeesAsync()"
            },
            {
              "name": "3100-RETRIEVE-BY-CRITERIA",
              "line": 383,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 3100RetrieveByCriteriaAsync()"
            },
            {
              "name": "4000-INSERT-EMPLOYEE",
              "line": 387,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 4000InsertEmployeeAsync()"
            },
            {
              "name": "5000-UPDATE-EMPLOYEE",
              "line": 391,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 5000UpdateEmployeeAsync()"
            },
            {
              "name": "6000-DELETE-EMPLOYEE",
              "line": 395,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 6000DeleteEmployeeAsync()"
            },
            {
              "name": "ANOTHER",
              "line": 413,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task AnotherAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 483,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "3050-FETCH-EMPLOYEE-RECORD",
              "line": 495,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 3050FetchEmployeeRecordAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 577,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 633,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "3150-FETCH-DEPT-RECORD",
              "line": 645,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 3150FetchDeptRecordAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 727,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 829,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 907,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 1009,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 1047,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 1095,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 1127,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 1171,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            },
            {
              "name": "8000-CHECK-SQL-STATUS",
              "line": 1229,
              "type": "PERFORM",
              "dotnet_equivalent": "private async Task 8000CheckSqlStatusAsync()"
            }
          ],
          "data_movements": [
            {
              "line": 297,
              "statement": "MOVE \"N\" TO WS-END-OF-DATA.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 299,
              "statement": "MOVE \"N\" TO WS-DB-CONNECTED.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 321,
              "statement": "MOVE WS-DB-USER TO HV-DB-USER.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 323,
              "statement": "MOVE WS-DB-PASSWORD TO HV-DB-PASSWORD.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 345,
              "statement": "MOVE \"Y\" TO WS-DB-CONNECTED",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 399,
              "statement": "MOVE \"N\" TO WS-CONTINUE-CHOICE",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 471,
              "statement": "MOVE \"N\" TO WS-END-OF-DATA.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 553,
              "statement": "MOVE HV-EMP-SALARY TO WS-FORMATTED-SALARY",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 573,
              "statement": "MOVE \"Y\" TO WS-END-OF-DATA",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 613,
              "statement": "MOVE WS-SEARCH-DEPT TO HV-SEARCH-DEPT.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 615,
              "statement": "MOVE WS-SEARCH-MIN-SALARY TO HV-MIN-SALARY.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 621,
              "statement": "MOVE \"N\" TO WS-END-OF-DATA.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 703,
              "statement": "MOVE HV-EMP-SALARY TO WS-FORMATTED-SALARY",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 723,
              "statement": "MOVE \"Y\" TO WS-END-OF-DATA",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 793,
              "statement": "MOVE WS-EMP-ID TO HV-EMP-ID.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 795,
              "statement": "MOVE WS-EMP-FIRST-NAME TO HV-EMP-FIRST-NAME.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 797,
              "statement": "MOVE WS-EMP-LAST-NAME TO HV-EMP-LAST-NAME.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 799,
              "statement": "MOVE WS-EMP-DEPT TO HV-EMP-DEPT.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 801,
              "statement": "MOVE WS-EMP-POSITION TO HV-EMP-POSITION.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 803,
              "statement": "MOVE WS-EMP-SALARY TO HV-EMP-SALARY.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 805,
              "statement": "MOVE WS-EMP-HIRE-DATE TO HV-EMP-HIRE-DATE.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 883,
              "statement": "MOVE WS-EMP-ID TO HV-EMP-ID.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 913,
              "statement": "MOVE HV-EMP-FIRST-NAME TO WS-EMP-FIRST-NAME",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 915,
              "statement": "MOVE HV-EMP-LAST-NAME TO WS-EMP-LAST-NAME",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 917,
              "statement": "MOVE HV-EMP-DEPT TO WS-EMP-DEPT",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 919,
              "statement": "MOVE HV-EMP-POSITION TO WS-EMP-POSITION",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 921,
              "statement": "MOVE HV-EMP-SALARY TO WS-EMP-SALARY",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 923,
              "statement": "MOVE HV-EMP-HIRE-DATE TO WS-EMP-HIRE-DATE",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 955,
              "statement": "MOVE HV-EMP-DEPT TO WS-EMP-DEPT",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 967,
              "statement": "MOVE HV-EMP-POSITION TO WS-EMP-POSITION",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 979,
              "statement": "MOVE HV-EMP-SALARY TO WS-EMP-SALARY",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 985,
              "statement": "MOVE WS-EMP-DEPT TO HV-EMP-DEPT",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 987,
              "statement": "MOVE WS-EMP-POSITION TO HV-EMP-POSITION",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 989,
              "statement": "MOVE WS-EMP-SALARY TO HV-EMP-SALARY",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 1077,
              "statement": "MOVE WS-EMP-ID TO HV-EMP-ID.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 1187,
              "statement": "MOVE SQLCODE TO WS-SQL-STATUS.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            },
            {
              "line": 1189,
              "statement": "MOVE SQLERRMC TO WS-SQL-MSG.",
              "type": "MOVE",
              "dotnet_hint": "Property assignment or mapping"
            }
          ],
          "conditional_logic": [
            {
              "condition": "DB-CONNECTED",
              "line": 263,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 343,
              "complexity": "low"
            },
            {
              "condition": "WS-CONTINUE-CHOICE NOT = \"N\" AND WS-OPERATION-CHOICE NOT = 9",
              "line": 409,
              "complexity": "medium"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 487,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 547,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 100",
              "line": 571,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 637,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 697,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 100",
              "line": 721,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 833,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 911,
              "complexity": "low"
            },
            {
              "condition": "WS-EMP-DEPT = SPACES",
              "line": 953,
              "complexity": "low"
            },
            {
              "condition": "WS-EMP-POSITION = SPACES",
              "line": 965,
              "complexity": "low"
            },
            {
              "condition": "WS-EMP-SALARY = ZEROES",
              "line": 977,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 1013,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 100",
              "line": 1041,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 1099,
              "complexity": "low"
            },
            {
              "condition": "WS-CONTINUE-CHOICE = \"Y\" OR WS-CONTINUE-CHOICE = \"Y\"",
              "line": 1115,
              "complexity": "medium"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 1131,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 100",
              "line": 1165,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE < 0",
              "line": 1193,
              "complexity": "low"
            },
            {
              "condition": "DB-CONNECTED",
              "line": 1219,
              "complexity": "low"
            },
            {
              "condition": "SQLCODE = 0",
              "line": 1233,
              "complexity": "low"
            }
          ],
          "state_mechanisms": {
            "TSQ_queues": [],
            "TDQ_queues": [],
            "COMMAREAs": [],
            "CHANNELS": [],
            "CONTAINERS": [],
            "MAPSETS": [],
            "TRANSIDS": []
          },
          "performance_indicators": {
            "file_operations": 0,
            "database_operations": 23,
            "network_operations": 0,
            "loops": 26,
            "conditions": 23
          },
          "error_handling": [
            {
              "line": 123,
              "type": "error_handling",
              "statement": "01 WS-ERROR-HANDLING."
            },
            {
              "line": 129,
              "type": "error_handling",
              "statement": "05 WS-ERROR-MSG             PIC X(100)."
            },
            {
              "line": 293,
              "type": "error_handling",
              "statement": "WS-ERROR-HANDLING."
            },
            {
              "line": 353,
              "type": "error_handling",
              "statement": "DISPLAY \"SQL Error Code: \" SQLCODE"
            },
            {
              "line": 355,
              "type": "error_handling",
              "statement": "DISPLAY \"SQL Error Message: \" SQLERRMC"
            },
            {
              "line": 1195,
              "type": "error_handling",
              "statement": "STRING \"SQL ERROR: \" DELIMITED BY SIZE"
            },
            {
              "line": 1203,
              "type": "error_handling",
              "statement": "INTO WS-ERROR-MSG"
            },
            {
              "line": 1205,
              "type": "error_handling",
              "statement": "DISPLAY WS-ERROR-MSG"
            },
            {
              "line": 1239,
              "type": "error_handling",
              "statement": "DISPLAY \"Error during database disconnect.\""
            }
          ],
          "security_aspects": [],
          "metadata": {
            "total_lines": 0,
            "cics_commands_count": 0,
            "sql_blocks_count": 23,
            "business_logic_statements": 0,
            "procedures_count": 26,
            "complexity_score": 46,
            "modernization_score": 1
          },
          "dotnet_suggestions": {
            "service_name": "DbconnectService",
            "controller_name": "DbconnectController",
            "required_services": [],
            "suggested_patterns": [
              "Strategy or Template Method"
            ],
            "performance_considerations": [
              "Batch operations instead of loops",
              "Use EF Change Tracking wisely"
            ],
            "security_recommendations": [
              "Use HTTPS for all endpoints",
              "Implement authentication & authorization",
              "Log sensitive operations"
            ]
          }
        }
      },
      "copybooks": {},
      "control_includes": {},
      "jcl_files": {},
      "bms_maps": {},
      "summary": {
        "total_programs": 1,
        "total_copybooks": 0,
        "total_control_includes": 0,
        "total_jcl_files": 0,
        "total_bms_maps": 0
      },
      "project_metadata": {
        "analysis_timestamp": "2025-07-07T11:54:58.000435",
        "total_files": 1,
        "business_domain": "RETAIL",
        "cics_transaction_flow": [],
        "data_flow_analysis": {},
        "integration_points": []
      },
      "cross_references": {
        "program_to_copybook": {
          "cobol_code.cbl": []
        },
        "program_to_program": {},
        "data_dependencies": []
      },
      "transaction_flows": [
        {
          "program": "cobol_code.cbl",
          "entry_point": "DBCONNECT",
          "cics_operations": 0,
          "data_operations": 23,
          "complexity": 46
        }
      ],
      "ai_insights": {
        "business_domain": "RETAIL",
        "integration_patterns": [
          "Database Integration",
          "Batch Processing"
        ],
        "data_flows": [
          {
            "source": "Mainframe",
            "destination": "SQL Database",
            "type": "Transactional Data",
            "frequency": "Real-time"
          }
        ],
        "modernization_recommendations": [
          "Migrate COBOL programs to modern languages like Java or .NET",
          "Implement API-based integration for real-time data access",
          "Consider cloud-based solutions for scalability and flexibility"
        ],
        "risk_assessment": {
          "legacy_technology": "High",
          "data_security": "Medium",
          "integration_complexity": "Medium",
          "operational_disruption": "Low"
        }
      },
      "enhancement_timestamp": "2025-07-07T11:55:00.194659"
    },
    "conversion_context": {
      "business_entities": [
        {
          "cobol_name": "WS-EMPLOYEE-RECORD",
          "dotnet_class": "WsEmployeeRecord",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-DB-CONNECTION",
          "dotnet_class": "WsDbConnection",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-FLAGS",
          "dotnet_class": "WsFlags",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-COUNTERS",
          "dotnet_class": "WsCounters",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-ERROR-HANDLING",
          "dotnet_class": "WsErrorHandling",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-SEARCH-CRITERIA",
          "dotnet_class": "WsSearchCriteria",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-USER-INPUT",
          "dotnet_class": "WsUserInput",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "WS-DISPLAY-VARIABLES",
          "dotnet_class": "WsDisplayVariables",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-ID",
          "dotnet_class": "HvEmpId",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-FIRST-NAME",
          "dotnet_class": "HvEmpFirstName",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-LAST-NAME",
          "dotnet_class": "HvEmpLastName",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-DEPT",
          "dotnet_class": "HvEmpDept",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-POSITION",
          "dotnet_class": "HvEmpPosition",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-SALARY",
          "dotnet_class": "HvEmpSalary",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-EMP-HIRE-DATE",
          "dotnet_class": "HvEmpHireDate",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-DB-USER",
          "dotnet_class": "HvDbUser",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-DB-PASSWORD",
          "dotnet_class": "HvDbPassword",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-SEARCH-DEPT",
          "dotnet_class": "HvSearchDept",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        },
        {
          "cobol_name": "HV-MIN-SALARY",
          "dotnet_class": "HvMinSalary",
          "namespace": "CicsModernization.Domain.Entities",
          "source_file": "cobol_code.cbl",
          "complexity": "medium"
        }
      ],
      "conversion_patterns": [
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-EMPLOYEE-RECORD",
          "dotnet_equivalent": "public class WsEmployeeRecord",
          "context": "Convert COBOL record WS-EMPLOYEE-RECORD to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-DB-CONNECTION",
          "dotnet_equivalent": "public class WsDbConnection",
          "context": "Convert COBOL record WS-DB-CONNECTION to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-FLAGS",
          "dotnet_equivalent": "public class WsFlags",
          "context": "Convert COBOL record WS-FLAGS to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-COUNTERS",
          "dotnet_equivalent": "public class WsCounters",
          "context": "Convert COBOL record WS-COUNTERS to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-ERROR-HANDLING",
          "dotnet_equivalent": "public class WsErrorHandling",
          "context": "Convert COBOL record WS-ERROR-HANDLING to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-SEARCH-CRITERIA",
          "dotnet_equivalent": "public class WsSearchCriteria",
          "context": "Convert COBOL record WS-SEARCH-CRITERIA to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-USER-INPUT",
          "dotnet_equivalent": "public class WsUserInput",
          "context": "Convert COBOL record WS-USER-INPUT to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 WS-DISPLAY-VARIABLES",
          "dotnet_equivalent": "public class WsDisplayVariables",
          "context": "Convert COBOL record WS-DISPLAY-VARIABLES to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-ID",
          "dotnet_equivalent": "public class HvEmpId",
          "context": "Convert COBOL record HV-EMP-ID to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-FIRST-NAME",
          "dotnet_equivalent": "public class HvEmpFirstName",
          "context": "Convert COBOL record HV-EMP-FIRST-NAME to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-LAST-NAME",
          "dotnet_equivalent": "public class HvEmpLastName",
          "context": "Convert COBOL record HV-EMP-LAST-NAME to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-DEPT",
          "dotnet_equivalent": "public class HvEmpDept",
          "context": "Convert COBOL record HV-EMP-DEPT to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-POSITION",
          "dotnet_equivalent": "public class HvEmpPosition",
          "context": "Convert COBOL record HV-EMP-POSITION to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-SALARY",
          "dotnet_equivalent": "public class HvEmpSalary",
          "context": "Convert COBOL record HV-EMP-SALARY to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-EMP-HIRE-DATE",
          "dotnet_equivalent": "public class HvEmpHireDate",
          "context": "Convert COBOL record HV-EMP-HIRE-DATE to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-DB-USER",
          "dotnet_equivalent": "public class HvDbUser",
          "context": "Convert COBOL record HV-DB-USER to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-DB-PASSWORD",
          "dotnet_equivalent": "public class HvDbPassword",
          "context": "Convert COBOL record HV-DB-PASSWORD to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-SEARCH-DEPT",
          "dotnet_equivalent": "public class HvSearchDept",
          "context": "Convert COBOL record HV-SEARCH-DEPT to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "data_structure",
          "cobol_pattern": "01 HV-MIN-SALARY",
          "dotnet_equivalent": "public class HvMinSalary",
          "context": "Convert COBOL record HV-MIN-SALARY to Java class",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD EMP",
          "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for EMP",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD EMP",
          "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for EMP",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD FIRST",
          "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for FIRST",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "file_operation",
          "cobol_pattern": "FD FIRST",
          "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for FIRST",
          "context": "Convert file operations to repository pattern",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 1000-INITIALIZE.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF DB-CONNECTED",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 2000-PROCESS-USER-CHOICE",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 9000-TERMINATE.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 1100-CONNECT-TO-DB.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 2100-DISPLAY-MENU.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3000-RETRIEVE-ALL-EMPLOYEES",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3100-RETRIEVE-BY-CRITERIA",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 4000-INSERT-EMPLOYEE",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 5000-UPDATE-EMPLOYEE",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 6000-DELETE-EMPLOYEE",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-CONTINUE-CHOICE NOT = \"N\" AND WS-OPERATION-CHOICE NOT = 9",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3050-FETCH-EMPLOYEE-RECORD",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 3150-FETCH-DEPT-RECORD",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-EMP-DEPT = SPACES",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-EMP-POSITION = SPACES",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-EMP-SALARY = ZEROES",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF WS-CONTINUE-CHOICE = \"Y\" OR WS-CONTINUE-CHOICE = \"y\"",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 100",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE < 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF DB-CONNECTED",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
          "dotnet_equivalent": "// PERFORM converted to Java",
          "context": "Convert PERFORM statement to Java",
          "source_file": "cobol_code.cbl"
        },
        {
          "pattern_type": "business_logic",
          "cobol_pattern": "IF SQLCODE = 0",
          "dotnet_equivalent": "// IF converted to Java",
          "context": "Convert IF statement to Java",
          "source_file": "cobol_code.cbl"
        }
      ],
      "dependencies": {},
      "cics_patterns": [],
      "architecture_recommendations": [
        "Implement Clean Architecture with Domain-Driven Design",
        "Use Entity Framework Core for data persistence",
        "Implement CQRS pattern for read/write separation",
        "Use MediatR for decoupled command/query handling"
      ],
      "technology_stack": {
        "database_usage": true,
        "messaging_patterns": [],
        "caching_patterns": [],
        "security_patterns": [
          "JWT Authentication",
          "Role-based Authorization"
        ],
        "recommended_packages": [
          "Microsoft.EntityFrameworkCore",
          "Microsoft.AspNetCore.Authentication.JwtBearer",
          "Swashbuckle.AspNetCore",
          "Serilog.AspNetCore"
        ]
      }
    }
  },
  "conversion_context": {
    "business_entities": [
      {
        "cobol_name": "WS-EMPLOYEE-RECORD",
        "dotnet_class": "WsEmployeeRecord",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-DB-CONNECTION",
        "dotnet_class": "WsDbConnection",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-FLAGS",
        "dotnet_class": "WsFlags",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-COUNTERS",
        "dotnet_class": "WsCounters",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-ERROR-HANDLING",
        "dotnet_class": "WsErrorHandling",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-SEARCH-CRITERIA",
        "dotnet_class": "WsSearchCriteria",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-USER-INPUT",
        "dotnet_class": "WsUserInput",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "WS-DISPLAY-VARIABLES",
        "dotnet_class": "WsDisplayVariables",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-ID",
        "dotnet_class": "HvEmpId",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-FIRST-NAME",
        "dotnet_class": "HvEmpFirstName",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-LAST-NAME",
        "dotnet_class": "HvEmpLastName",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-DEPT",
        "dotnet_class": "HvEmpDept",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-POSITION",
        "dotnet_class": "HvEmpPosition",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-SALARY",
        "dotnet_class": "HvEmpSalary",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-EMP-HIRE-DATE",
        "dotnet_class": "HvEmpHireDate",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-DB-USER",
        "dotnet_class": "HvDbUser",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-DB-PASSWORD",
        "dotnet_class": "HvDbPassword",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-SEARCH-DEPT",
        "dotnet_class": "HvSearchDept",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      },
      {
        "cobol_name": "HV-MIN-SALARY",
        "dotnet_class": "HvMinSalary",
        "namespace": "CicsModernization.Domain.Entities",
        "source_file": "cobol_code.cbl",
        "complexity": "medium"
      }
    ],
    "conversion_patterns": [
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-EMPLOYEE-RECORD",
        "dotnet_equivalent": "public class WsEmployeeRecord",
        "context": "Convert COBOL record WS-EMPLOYEE-RECORD to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-DB-CONNECTION",
        "dotnet_equivalent": "public class WsDbConnection",
        "context": "Convert COBOL record WS-DB-CONNECTION to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-FLAGS",
        "dotnet_equivalent": "public class WsFlags",
        "context": "Convert COBOL record WS-FLAGS to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-COUNTERS",
        "dotnet_equivalent": "public class WsCounters",
        "context": "Convert COBOL record WS-COUNTERS to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-ERROR-HANDLING",
        "dotnet_equivalent": "public class WsErrorHandling",
        "context": "Convert COBOL record WS-ERROR-HANDLING to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-SEARCH-CRITERIA",
        "dotnet_equivalent": "public class WsSearchCriteria",
        "context": "Convert COBOL record WS-SEARCH-CRITERIA to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-USER-INPUT",
        "dotnet_equivalent": "public class WsUserInput",
        "context": "Convert COBOL record WS-USER-INPUT to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 WS-DISPLAY-VARIABLES",
        "dotnet_equivalent": "public class WsDisplayVariables",
        "context": "Convert COBOL record WS-DISPLAY-VARIABLES to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-ID",
        "dotnet_equivalent": "public class HvEmpId",
        "context": "Convert COBOL record HV-EMP-ID to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-FIRST-NAME",
        "dotnet_equivalent": "public class HvEmpFirstName",
        "context": "Convert COBOL record HV-EMP-FIRST-NAME to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-LAST-NAME",
        "dotnet_equivalent": "public class HvEmpLastName",
        "context": "Convert COBOL record HV-EMP-LAST-NAME to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-DEPT",
        "dotnet_equivalent": "public class HvEmpDept",
        "context": "Convert COBOL record HV-EMP-DEPT to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-POSITION",
        "dotnet_equivalent": "public class HvEmpPosition",
        "context": "Convert COBOL record HV-EMP-POSITION to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-SALARY",
        "dotnet_equivalent": "public class HvEmpSalary",
        "context": "Convert COBOL record HV-EMP-SALARY to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-EMP-HIRE-DATE",
        "dotnet_equivalent": "public class HvEmpHireDate",
        "context": "Convert COBOL record HV-EMP-HIRE-DATE to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-DB-USER",
        "dotnet_equivalent": "public class HvDbUser",
        "context": "Convert COBOL record HV-DB-USER to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-DB-PASSWORD",
        "dotnet_equivalent": "public class HvDbPassword",
        "context": "Convert COBOL record HV-DB-PASSWORD to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-SEARCH-DEPT",
        "dotnet_equivalent": "public class HvSearchDept",
        "context": "Convert COBOL record HV-SEARCH-DEPT to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "data_structure",
        "cobol_pattern": "01 HV-MIN-SALARY",
        "dotnet_equivalent": "public class HvMinSalary",
        "context": "Convert COBOL record HV-MIN-SALARY to Java class",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "file_operation",
        "cobol_pattern": "FD EMP",
        "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for EMP",
        "context": "Convert file operations to repository pattern",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "file_operation",
        "cobol_pattern": "FD EMP",
        "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for EMP",
        "context": "Convert file operations to repository pattern",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "file_operation",
        "cobol_pattern": "FD FIRST",
        "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for FIRST",
        "context": "Convert file operations to repository pattern",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "file_operation",
        "cobol_pattern": "FD FIRST",
        "dotnet_equivalent": "// Repository pattern with Entity Framework Core with Entity Framework for FIRST",
        "context": "Convert file operations to repository pattern",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 1000-INITIALIZE.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF DB-CONNECTED",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 2000-PROCESS-USER-CHOICE",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 9000-TERMINATE.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 1100-CONNECT-TO-DB.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 2100-DISPLAY-MENU.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 3000-RETRIEVE-ALL-EMPLOYEES",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 3100-RETRIEVE-BY-CRITERIA",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 4000-INSERT-EMPLOYEE",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 5000-UPDATE-EMPLOYEE",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 6000-DELETE-EMPLOYEE",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF WS-CONTINUE-CHOICE NOT = \"N\" AND WS-OPERATION-CHOICE NOT = 9",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 3050-FETCH-EMPLOYEE-RECORD",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 100",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 3150-FETCH-DEPT-RECORD",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 100",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF WS-EMP-DEPT = SPACES",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF WS-EMP-POSITION = SPACES",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF WS-EMP-SALARY = ZEROES",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 100",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS.",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF WS-CONTINUE-CHOICE = \"Y\" OR WS-CONTINUE-CHOICE = \"y\"",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 100",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE < 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF DB-CONNECTED",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "PERFORM 8000-CHECK-SQL-STATUS",
        "dotnet_equivalent": "// PERFORM converted to Java",
        "context": "Convert PERFORM statement to Java",
        "source_file": "cobol_code.cbl"
      },
      {
        "pattern_type": "business_logic",
        "cobol_pattern": "IF SQLCODE = 0",
        "dotnet_equivalent": "// IF converted to Java",
        "context": "Convert IF statement to Java",
        "source_file": "cobol_code.cbl"
      }
    ],
    "dependencies": {},
    "cics_patterns": [],
    "architecture_recommendations": [
      "Implement Clean Architecture with Domain-Driven Design",
      "Use Entity Framework Core for data persistence",
      "Implement CQRS pattern for read/write separation",
      "Use MediatR for decoupled command/query handling"
    ],
    "technology_stack": {
      "database_usage": true,
      "messaging_patterns": [],
      "caching_patterns": [],
      "security_patterns": [
        "JWT Authentication",
        "Role-based Authorization"
      ],
      "recommended_packages": [
        "Microsoft.EntityFrameworkCore",
        "Microsoft.AspNetCore.Authentication.JwtBearer",
        "Swashbuckle.AspNetCore",
        "Serilog.AspNetCore"
      ]
    }
  },
  "project_files_count": 1,
  "timestamp": "2025-07-07T11:55:00.229116"
}